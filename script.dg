//Change below to the relevant old & new modules
oldModule = "Households";
newModule = "Businesses";

oldRecord = zoho.crm.getRecordById(oldModule,recordId);

//Get all Necessary Fields - add/modify as needed
recordName = oldRecord.get("Name");
email = oldRecord.get("Primary_Email");

//Create Record
rMap = Map();
rMap.put("Name",recordName);
rMap.put("Primary_Email",email);
newRecord = zoho.crm.createRecord(newModule, rMap);
newRecordId = newRecord.get("id");
info newRecordId;

//Get and Modify Related Contacts	
allContacts = zoho.crm.getRelatedRecords("Contacts", oldModule, recordId);
for each c in allContacts
{
	delete = zoho.crm.updateRecord("Contacts", c.get("id"), {"Household" : ""});
	update = zoho.crm.updateRecord("Contacts", c.get("id"), {"Business" : newRecordId});
	info delete;
	info update;
}

//Get and Modify Related Deals
allDeals = zoho.crm.getRelatedRecords("Deals", oldModule, recordId);
if (allDeals.size() > 0)
{
  for each d in allDeals
  {
	  delete = zoho.crm.updateRecord("Deals", d.get("id"), {"Household_Name" : ""});
	  update = zoho.crm.updateRecord("Deals", d.get("id"), {"Business_Name" : newRecordId});
	  info delete;
	  info update;
  }
}

//Copy Related Notes
allNotes = zoho.crm.getRelatedRecords("Notes", oldModule, recordId);
if (allNotes.size() > 0)
{
  for each n in allNotes
  {
	  notesMap = {"Parent_Id":newRecordId,"Note_Title":n.get("Note_Title"),"Note_Content":n.get("Note_Content"),"$se_module": newModule};
	  create = zoho.crm.createRecord("Notes",notesMap);
	  info create;
}

//Get and Modify Related Activities
allAct = zoho.crm.getRelatedRecords("Activities", oldModule, recordId);
if (allAct.size() > 0)
{
for each a in allAct
	{
		idMap = Map();
		idMap.put("id",newRecordId);
		aMap = Map();
		aMap.put("$se_module",newModule);
		aMap.put("What_Id",idMap);
		updateAct = zoho.crm.updateRecord(a.get("Activity_Type"), a.get("id"), aMap);
		info updateAct;
	}
}

//Get and Modify Related Closed Activities
allPastAct = zoho.crm.getRelatedRecords("Activities_History", oldModule, recordId);
if (allPastAct.size() > 0)
{
	for each ap in allPastAct
	{
		idMap = Map();
		idMap.put("id",newRecordId);
		aMap = Map();
		aMap.put("$se_module",newModule);
		aMap.put("What_Id",idMap);
		updatePastAct = zoho.crm.updateRecord(ap.get("Activity_Type"), ap.get("id"), aMap);
		info updatePastAct;
	}
}

//Download & Upload Attachments
attachment = invokeurl
[
	url: "https://www.zohoapis.com/crm/v2/"+oldModule+"/"+recordId+"/Attachments"
	type: GET
	connection: "zohocrm" //Change this to your connection name
];
if (attachment.get("data").size() > 0)
{
	for each atm in attachment.get("data")
	{
		download = invokeurl
		[
			url: "https://www.zohoapis.com/crm/v2/"+oldModule+"/"+recordId+"/Attachments/"+atm.get("id")
			type: GET
			connection: "zohocrm" //Change this to your connection name
		];
		
		upload = zoho.crm.attachFile(newModule,newRecordId,download);
		info upload;
	}
}

//Delete Old Record
delete = invokeurl
[
	url: "https://www.zohoapis.com/crm/v2/"+oldModule+"?ids="+recordId+"&wf_trigger=true"
	type: DELETE
	connection: "zohocrm" //Change this to your connection name
];
info delete;
